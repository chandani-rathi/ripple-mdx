import Hello from './Hello.ripple.mdx';
import routes from 'virtual:ripple-routes';
import { Link, Loading, NotFound, Route, RouteContext, getHashPath, findRoute } from 'ripple-router-hash';
import { effect, untrack } from 'ripple';

console.log('App Routes', routes);

export default component App() {
	let $currentPath = untrack(() => getHashPath());
	let $loading = true;
	let $newRoute = null;

	effect(() => {
		$loading = false;
		$newRoute = findRoute($currentPath, routes);
	});

	untrack(() => {
		RouteContext.set({
			documentTitle: document.title,
		});
	});

	effect(() => {
		const onPopState = () => {
			$currentPath = getHashPath();
		};
		window.addEventListener('hashchange', onPopState);

		return () => window.removeEventListener('hashchange', onPopState);
	});

	<div class='min-h-screen flex flex-row'>
		<aside class='max-w-1/4  p-8 max-h-screen overflow-auto border-r'>
			<h1 class='text-2xl font-semibold border-b'>{'Ripple Documentation'}</h1>
			<div class='m-4'><ul class='grid gap-4'>
				<li><Link $to='/'>{'Home'}</Link></li>
				<li><Link $to='/about'>{'About'}</Link></li>
			</ul></div>
		</aside>
		<content class='flex-1 flex flex-col p-8 max-h-screen overflow-auto'><article class='prose prose-stone lg:prose-lg xl:prose-xl max-w-none'>
			if ($loading) {
				<Loading />
			} else if (!$newRoute) {
				<NotFound />
			} else {
				<Route $route={$newRoute} />
			}
		</article></content>
	</div>
}